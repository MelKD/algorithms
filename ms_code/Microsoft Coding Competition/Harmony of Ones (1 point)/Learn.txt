In this problem, you will be given two numbers as input. The numbers are constrained to being signed 32-bit, non-negative integers. Your program should compute the number of times the set bits are in the same position for both numbers. Essentially, this means counting the number of times there is a 1 in the same base-2 place for both the first and second integer. As an example, consider input 7,3. The numbers 7,3 are in decimal; in binary 7 is 111 and 3 is 011. For that example, your program should output 2 because there is a set bit in the same base-2 place twice.

Input definition
The first line of an input file for this problem will be N, the number of test cases to solve. It is noted that 100 = N = 500

The next N lines will be in the following format

x,y where x and y are both positive integers, i.e. 1 = X, Y = MAXINT.

Output definition
Your output should have N lines; each line should be an integer that is the count of the number of places where there are 1s in the binary representations of both numbers.

Example input
3
31,65
7,3
7,7
Example output
1
2
3